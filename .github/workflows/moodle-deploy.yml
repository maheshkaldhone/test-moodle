name: Auto Plugin Deployment

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  PROD_MOODLE_ROOT: /var/www/html/moodle
  DEV_MOODLE_ROOT: /var/www/html/moodle

jobs:
  find-changed:
    name: Find Changed Plugin Directories
    runs-on: ubuntu-latest
    outputs:
      plugins: ${{ steps.list_plugins.outputs.plugins }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Detect changes in any file under the mod/ directory
      - name: Detect changes in mod folder
        id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: json
          filters: |
            mod:
              - "mod/**"

      # Extract unique plugin directories (the first subfolder under mod)
      - name: Extract changed plugin directories
        id: list_plugins
        run: |
          echo "Changed files detected: ${{ steps.filter.outputs.mod_files }}"
          # Extract the second field from paths like mod/<plugin>/... then remove duplicates.
          plugins=$(echo "${{ steps.filter.outputs.mod_files }}" | jq -r '.[]' | awk -F'/' 'NF>=2 {print $2}' | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "Detected plugins: $plugins"
          echo "plugins=$plugins" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy Changed Plugins
    needs: find-changed
    # Only run if at least one plugin was changed
    if: ${{ fromJson(needs.find-changed.outputs.plugins) != [] }}
    strategy:
      matrix:
        plugin: ${{ fromJson(needs.find-changed.outputs.plugins) }}
    runs-on: 
      - self-hosted
      - Linux
      - X64
      # Choose the correct runner tag based on the branch name.
      - ${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      url: ${{ github.ref == 'refs/heads/main' && 'http://moodle-lb-244874513.us-east-2.elb.amazonaws.com' || 'http://moodle-dev-lb-244874513.us-east-2.elb.amazonaws.com' }}
    steps:
      - name: Checkout Selected Branch
        uses: actions/checkout@v4

      - name: Generate Timestamp
        id: timestamp
        run: echo "time=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Package Plugin
        id: zip
        run: |
          ZIP_FILE="${{ github.ref_name }}-${{ matrix.plugin }}-${{ steps.timestamp.outputs.time }}.zip"
          cd mod
          zip -qr "../$ZIP_FILE" "${{ matrix.plugin }}"
          echo "zip-file=$ZIP_FILE" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-package-${{ github.ref_name }}-${{ matrix.plugin }}
          path: ${{ steps.zip.outputs.zip-file }}
          retention-days: 5

      - name: Determine Moodle Root Path
        id: determine-path
        run: |
          case "${{ github.ref_name }}" in
            dev)  MOODLE_PATH=${{ env.DEV_MOODLE_ROOT }} ;;
            main) MOODLE_PATH=${{ env.PROD_MOODLE_ROOT }} ;;
            *) echo "Unsupported branch" && exit 1 ;;
          esac
          echo "MOODLE_PATH=$MOODLE_PATH" >> $GITHUB_ENV

      - name: Compare Version Numbers
        run: |
          TEMP_ARTIFACT_DIR="/tmp/temp_artifact_${{ steps.timestamp.outputs.time }}"
          mkdir -p "$TEMP_ARTIFACT_DIR"

          unzip -q "/tmp/${{ steps.zip.outputs.zip-file }}" -d "$TEMP_ARTIFACT_DIR"

          artifact_file="$TEMP_ARTIFACT_DIR/${{ matrix.plugin }}/version.php"
          server_file="${{ env.MOODLE_PATH }}/mod/${{ matrix.plugin }}/version.php"

          if [ ! -f "$artifact_file" ]; then
            echo "::error:: Artifact version file not found!"
            exit 1
          fi

          ver_artifact=$(grep '\$plugin->version' "$artifact_file" | awk -F'=' '{print $2}' | tr -d " ;")
          echo "Artifact version: $ver_artifact"

          if [ -f "$server_file" ]; then
            ver_server=$(grep '\$plugin->version' "$server_file" | awk -F'=' '{print $2}' | tr -d " ;")
            echo "Server version: $ver_server"

            if [ "$ver_server" -gt "$ver_artifact" ]; then
              echo "::error:: Server version ($ver_server) is greater than artifact version ($ver_artifact). Deployment aborted."
              exit 1
            fi
          else
            echo "Server version file not found, proceeding."
          fi

          rm -rf "$TEMP_ARTIFACT_DIR"

      - name: Backup Current Plugin Directory
        run: |
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          PLUGIN_DIR="${{ env.MOODLE_PATH }}/mod/${{ matrix.plugin }}"
          BACKUP_FILE="/tmp/${{ matrix.plugin }}-backup-${TIMESTAMP}.zip"

          if [ -d "$PLUGIN_DIR" ]; then
            sudo zip -r "$BACKUP_FILE" "$PLUGIN_DIR"
            echo "Backup created at $BACKUP_FILE"
          else
            echo "No existing plugin directory found, skipping backup."
          fi

      - name: Deploy to Moodle
        run: |
          DEPLOY_DIR="${{ env.MOODLE_PATH }}/mod"
          sudo unzip -qo "/tmp/${{ steps.zip.outputs.zip-file }}" -d "$DEPLOY_DIR"
          sudo chown -R www-data:www-data "$DEPLOY_DIR/${{ matrix.plugin }}"